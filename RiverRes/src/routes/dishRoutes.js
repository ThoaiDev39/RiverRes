const express = require("express");
const { authMiddleware, adminMiddleware } = require("../middleware/authMiddleware");
const { Dish, Menu } = require("../models");

const router = express.Router();

/**
 * ğŸ“Œ Láº¥y danh sÃ¡ch táº¥t cáº£ mÃ³n Äƒn, kÃ¨m thÃ´ng tin menu
 */
router.get("/", async (req, res) => {
    try {
        const dishes = await Dish.findAll({ include: { model: Menu, attributes: ["id", "name"] } });
        res.status(200).json({ dishes });
    } catch (error) {
        console.error("Lá»—i láº¥y danh sÃ¡ch mÃ³n Äƒn:", error);
        res.status(500).json({ message: "Lá»—i mÃ¡y chá»§!" });
    }
});

/**
 * ğŸ“Œ Láº¥y chi tiáº¿t má»™t mÃ³n Äƒn theo ID, kÃ¨m thÃ´ng tin menu
 */
router.get("/:id", async (req, res) => {
    try {
        const { id } = req.params;
        const dish = await Dish.findByPk(id, { include: { model: Menu, attributes: ["id", "name"] } });

        if (!dish) {
            return res.status(404).json({ message: "MÃ³n Äƒn khÃ´ng tá»“n táº¡i!" });
        }

        res.status(200).json({ dish });
    } catch (error) {
        console.error("Lá»—i láº¥y mÃ³n Äƒn:", error);
        res.status(500).json({ message: "Lá»—i mÃ¡y chá»§!" });
    }
});

/**
 * ğŸ“Œ ThÃªm mÃ³n Äƒn vÃ o menu (Chá»‰ Admin)
 */
router.post("/", authMiddleware, adminMiddleware, async (req, res) => {
    try {
        const { name, description, price, image, menuId } = req.body;

        if (!name || !price || !menuId) {
            return res.status(400).json({ message: "Vui lÃ²ng nháº­p Ä‘áº§y Ä‘á»§ thÃ´ng tin!" });
        }

        // Kiá»ƒm tra menu cÃ³ tá»“n táº¡i khÃ´ng
        const menu = await Menu.findByPk(menuId);
        if (!menu) {
            return res.status(404).json({ message: "Menu khÃ´ng tá»“n táº¡i!" });
        }

        const newDish = await Dish.create({ name, description, price, image, menuId });

        res.status(201).json({ message: "ThÃªm mÃ³n Äƒn thÃ nh cÃ´ng!", dish: newDish });
    } catch (error) {
        console.error("Lá»—i thÃªm mÃ³n Äƒn:", error);
        res.status(500).json({ message: "Lá»—i mÃ¡y chá»§!" });
    }
});

/**
 * ğŸ“Œ Cáº­p nháº­t thÃ´ng tin mÃ³n Äƒn (Chá»‰ Admin)
 */
router.put("/:id", authMiddleware, adminMiddleware, async (req, res) => {
    try {
        const { id } = req.params;
        const { name, description, price, image, menuId } = req.body;

        const dish = await Dish.findByPk(id);
        if (!dish) {
            return res.status(404).json({ message: "MÃ³n Äƒn khÃ´ng tá»“n táº¡i!" });
        }

        if (menuId) {
            const menu = await Menu.findByPk(menuId);
            if (!menu) {
                return res.status(404).json({ message: "Menu khÃ´ng tá»“n táº¡i!" });
            }
        }

        await dish.update({ name, description, price, image, menuId });

        res.status(200).json({ message: "Cáº­p nháº­t mÃ³n Äƒn thÃ nh cÃ´ng!", dish });
    } catch (error) {
        console.error("Lá»—i cáº­p nháº­t mÃ³n Äƒn:", error);
        res.status(500).json({ message: "Lá»—i mÃ¡y chá»§!" });
    }
});

/**
 * ğŸ“Œ XÃ³a mÃ³n Äƒn (Chá»‰ Admin)
 */
router.delete("/:id", authMiddleware, adminMiddleware, async (req, res) => {
    try {
        const { id } = req.params;

        const dish = await Dish.findByPk(id);
        if (!dish) {
            return res.status(404).json({ message: "MÃ³n Äƒn khÃ´ng tá»“n táº¡i!" });
        }

        await dish.destroy();

        res.status(200).json({ message: "XÃ³a mÃ³n Äƒn thÃ nh cÃ´ng!" });
    } catch (error) {
        console.error("Lá»—i xÃ³a mÃ³n Äƒn:", error);
        res.status(500).json({ message: "Lá»—i mÃ¡y chá»§!" });
    }
});

module.exports = router;
